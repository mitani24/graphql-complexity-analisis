type Query {
  authors(
    first: Int
    last: Int
    before: String
    after: String
  ): AuthorConnection!
  books(first: Int, last: Int, before: String, after: String): BookConnection!
}

type Author {
  id: ID!
  name: String
  books(first: Int, last: Int, before: String, after: String): BookConnection
}

type AuthorConnection {
  edges: [AuthorEdge]
  pageInfo: PageInfo!
}

type AuthorEdge {
  cursor: String!
  node: Author
}

type Book {
  id: ID!
  title: String
  authors(
    first: Int
    last: Int
    before: String
    after: String
  ): AuthorConnection
}

type BookConnection {
  edges: [BookEdge]
  pageInfo: PageInfo!
}

type BookEdge {
  cursor: String!
  node: Book
}

type PageInfo {
  hasNextPage: Boolean!
  hasPreviousPage: Boolean!
  startCursor: String
  endCursor: String
}
